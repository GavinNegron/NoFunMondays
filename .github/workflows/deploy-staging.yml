name: Deploy to Staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 67.205.132.203 >> ~/.ssh/known_hosts

      - name: Cleanup Nginx and free disk space
        run: |
          ssh root@67.205.132.203 <<EOF
            # Stop Nginx
            sudo systemctl stop nginx
            
            # Remove unused Docker containers, images, and volumes
            docker system prune -af --volumes
            
            # Clear Nginx temporary files
            sudo rm -rf /var/cache/nginx/*
            sudo rm -rf /var/log/nginx/*
            
            # Clean up system temporary files
            sudo rm -rf /tmp/*
            
            # Free up apt cache
            sudo apt-get clean
            sudo rm -rf /var/lib/apt/lists/*
            
            # Restart Nginx
            sudo systemctl start nginx
          EOF

      - name: Pull latest code from staging
        run: |
          ssh root@67.205.132.203 <<EOF
            cd /var/www/staging.nofunmondays.com/
            git fetch --all
            git reset --hard origin/staging  # Hard reset to match the remote staging branch
            git clean -fd  # Remove any untracked files or directories
          EOF

      - name: Clean up disk space
        run: |
          ssh root@67.205.132.203 <<EOF
            # Remove unused Docker resources
            docker system prune -a -f

            # Clean package cache
            apt-get clean

            # Remove old kernels
            dpkg --list | grep linux-image | awk '{print $2}' | grep -v $(uname -r) | xargs apt-get remove --purge -y

            # Remove unused packages
            apt-get autoremove -y

            # Find and remove large files (example: files larger than 100MB in /var and /home)
            find /var -type f -size +100M -exec rm -f {} \;
            find /home -type f -size +100M -exec rm -f {} \;
          EOF

      - name: Build frontend
        run: |
          ssh root@67.205.132.203 <<EOF
            cd /var/www/staging.nofunmondays.com/frontend
            docker rm -f frontend-staging || true
            docker build --build-arg ENVIRONMENT=staging -t frontend /var/www/staging.nofunmondays.com/frontend --force-rm
            docker run -d -p 3002:3000 --name frontend-staging frontend
          EOF

      - name: Install backend dependencies
        run: |
          ssh root@67.205.132.203 <<EOF
            cd /var/www/staging.nofunmondays.com/backend
            npm install --legacy-peer-deps
          EOF

      - name: Restart backend application
        run: |
          ssh root@67.205.132.203 <<EOF
            pm2 restart staging-app || pm2 start /var/www/staging.nofunmondays.com/backend/app.js --name staging-app
          EOF

      - name: Restart Nginx
        run: |
          ssh root@67.205.132.203 <<EOF
            sudo systemctl restart nginx
          EOF