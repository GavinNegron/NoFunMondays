name: Deploy to Staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 67.205.132.203 >> ~/.ssh/known_hosts

      - name: Pull latest code from staging branch
        run: |
          ssh root@67.205.132.203 <<EOF
            cd /var/www/staging.nofunmondays.com
            git fetch --all
            git reset --hard origin/staging  # Hard reset to match the remote staging branch
            git clean -fd  # Remove any untracked files or directories
          EOF

      - name: Build frontend Docker image
        run: |
          cd frontend
          docker build --build-arg ENVIRONMENT=staging -t build-blue .

      - name: Log in to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Tag the image
        run: |
          docker tag build-blue ${{ secrets.DOCKER_USERNAME }}/build-blue:latest

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/build-blue:latest

      - name: Upload Docker image to the server
        run: |
          ssh root@67.205.132.203 <<EOF
            docker pull ${{ secrets.DOCKER_USERNAME }}/build-blue:latest
            docker run -d -p 3002:3000 ${{ secrets.DOCKER_USERNAME }}/build-blue:latest
          EOF

      - name: Install backend dependencies
        run: |
          ssh root@67.205.132.203 <<EOF
            cd /var/www/staging.nofunmondays.com/backend
            npm install --legacy-peer-deps
          EOF

      - name: Restart backend application
        run: |
          ssh root@67.205.132.203 <<EOF
            cd /var/www/staging.nofunmondays.com
            if pm2 list | grep -q 'app-blue'; then
              pm2 restart app-blue
            else
              pm2 start npm --name app-blue -- start
            fi
          EOF

      - name: Restart Nginx
        run: |
          ssh root@67.205.132.203 <<EOF
            sudo systemctl restart nginx
          EOF
